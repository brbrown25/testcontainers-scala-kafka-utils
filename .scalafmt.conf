version = "3.6.1"

runner.dialect = "scala213"

align = true
align.arrowEnumeratorGenerator = true
align.openParenCallSite = false
align.openParenDefnSite = false
align.tokenCategory = {
  Equals = Assign,
  LeftArrow = Assign
}
align.tokens = [
  { code = "=>", owner = Case },
  { code = "%", owner = "Term.ApplyInfix" },
  { code = "%%", owner = "Term.ApplyInfix" },
  { code = "%%%", owner = "Term.ApplyInfix" },
  { code = "<-", owner = "Enumerator.Generator" },
  { code = "->", owner = "Term.ApplyInfix" },
  { code = "=", owner = "(Enumerator.Val|Defn.(Va(l|r)|Def|Type))" }
  { code = "extends", owner = "Defn.(Class|Trait|Object)" }
]

maxColumn = 118

continuationIndent.callSite = 2
continuationIndent.defnSite = 2
continuationIndent.extendSite = 2

newlines {
  beforeCurlyLambdaParams = multilineWithCaseOnly
  afterCurlyLambda = squash
  implicitParamListModifierPrefer = before
  sometimesBeforeColonInMethodReturnType = true
}

danglingParentheses.preset = true

docstrings.style = Asterisk
docstrings.oneline = fold
docstrings.wrap = no

rewrite.rules = [
  RedundantBraces,
  RedundantParens,
  PreferCurlyFors,
  SortModifiers,
]

rewrite.redundantBraces.stringInterpolation = true

project.git = true

# Exclude the generated source temporarily checked in to event-log-transformer
project.excludeFilters = []
